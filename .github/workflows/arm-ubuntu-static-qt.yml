name: arm Build Static Qt with Dependencies

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-22.04-arm

    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          apt-get update && apt-get install -y \
          build-essential \
          cmake \
          ninja-build \
          git \
          curl \
          wget \
          gperf \
          libtool \
          automake \
          ca-certificates \
          libxcb1-dev libxcb-util-dev libx11-dev \
          libxext-dev libxrender-dev libxkbcommon-dev \
          libx11-xcb-dev \
          libxcb-glx0-dev \
          libxcb-icccm4-dev \
          libxcb-image0-dev \
          libxcb-keysyms1-dev \
          libxcb-randr0-dev \
          libxcb-render-util0-dev \
          libxcb-shape0-dev \
          libxcb-shm0-dev \
          libxcb-sync-dev \
          libxcb-util-dev \
          libxcb-xfixes0-dev \
          libxcb-xkb-dev \
          libxcb1-dev \
          libxfixes-dev \
          libxi-dev \
          libxkbcommon-dev \
          libxkbcommon-x11-dev \
          libdbus-1-dev \
          libgl1-mesa-dev \
          libglu1-mesa-dev \
          libglib2.0-dev \
          libgtk-3-dev \ 
          libwayland-dev \ 
          libssl-dev \
          libfontconfig1-dev \
          meson \
          python3-pip \
           pkg-config \
          libxcb-dri2-0-dev

      - name: zlib
        run: |
          wget https://zlib.net/zlib-1.3.1.tar.gz
          tar -xzf zlib-1.3.1.tar.gz
          cd zlib-1.3.1
          ./configure --static --prefix=/usr/local && make -j$(nproc) && make install

      - name: libxml2 (v2.9.9, static build using configure)
        run: |
          wget https://github.com/GNOME/libxml2/archive/refs/tags/v2.9.9.tar.gz
          tar -xf v2.9.9.tar.gz && cd libxml2-2.9.9
          ./autogen.sh && \
          env \
          CFLAGS="-fPIC" \
          ./configure \
          --prefix=/usr/local \
          --enable-static \
          --disable-shared \
          --without-python \
          --with-zlib=/usr/local
          make -j$(nproc)
          make install
         
      - name: Download Qt 6.8 source
        run: |
          curl -LO https://download.qt.io/official_releases/qt/6.9/6.9.1/single/qt-everywhere-src-6.9.1.tar.xz
          tar xf qt-everywhere-src-6.8.3.tar.xz

      - name: Configure and build Qt statically (make version)
        run: |
          mkdir qt-build
          cd  qt-build
          ../qt-everywhere-src-6.8.3/configure \
            -prefix ../qt-build/qt6-static-install \
            -static -static-runtime \
            -release \
            -opensource -confirm-license \
            -nomake examples -nomake tests \
            -skip qt3d -skip qtwebengine -skip qtwebchannel -skip qtwebview \
            -skip qtcharts -skip qtvirtualkeyboard \
            -skip qtlocation -skip qtsensors -skip qtlottie \
            -skip qtconnectivity -skip qtdoc -skip qttranslations \
            -no-pch \
            -qt-harfbuzz \
            -qt-freetype \
            -qt-libpng \
            -qt-zlib \
            -qt-libjpeg \
            -qt-pcre \
            -qt-doubleconversion \
            -platform linux-g++ \
            -c++std c++20 

          cmake --build . --parallel
          cmake --install .

      - name: Package Qt
        run: |
          cd qt-build
          tar -czf qt6.8.3-linux-static.tar.gz qt6-static-install

      - name: Upload to GitHub Releases
        uses: softprops/action-gh-release@v1
        with:
          tag_name: qt6.9.1-static-linux
          name: Qt 6.9.1 Static Linux
          files: qt-build/qt6.8.3-linux-static.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

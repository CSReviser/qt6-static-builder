name: arm Build Static Qt with Dependencies

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-22.04-arm

    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            libgl1-mesa-dev \
            libxcb-xinerama0-dev \
            libxkbcommon-dev \
            libxcb-cursor-dev \
            libxcb-icccm4-dev \
            libxcb-image0-dev \
            libxcb-keysyms1-dev \
            libxcb-render-util0-dev \
            libxcb-xinput-dev \
            libxcb-xfixes0-dev \
            ninja-build \
            python3 \
            perl \
            cmake \
            curl \
            git \
            libfontconfig1-dev \
            libfreetype-dev \
            libgtk-3-dev \
            libx11-dev \
            libx11-xcb-dev \
            libxcb-randr0-dev \
            libxcb-shape0-dev \
            libxcb-shm0-dev \
            libxcb-sync-dev \
            libxrender-dev \
            libharfbuzz-dev \
            meson \
            libpng-dev 

      - name: zlib
        run: |
          wget https://zlib.net/zlib-1.3.1.tar.gz
          tar -xzf zlib-1.3.1.tar.gz
          cd zlib-1.3.1
          ./configure --static --prefix=/usr/local && sudo make -j$(nproc) && sudo make install

      - name: libxml2 (v2.9.9, static build using configure)
        run: |
          wget https://github.com/GNOME/libxml2/archive/refs/tags/v2.9.9.tar.gz
          tar -xf v2.9.9.tar.gz && cd libxml2-2.9.9
          ./autogen.sh && \
          env \
          CFLAGS="-fPIC" \
          ./configure \
          --prefix=/usr/local \
          --enable-static \
          --disable-shared \
          --without-python \
          --with-zlib=/usr/local
          sudo make -j$(nproc)
          sudo make install
          
      - name: libpng
        run: |
          wget https://download.sourceforge.net/libpng/libpng-1.6.37.tar.gz
          tar -xzf libpng-1.6.37.tar.gz
          cd libpng-1.6.37
          ./configure --prefix=/usr/local --disable-shared --enable-static && sudo make -j$(nproc) && sudo make install         

      - name: libjpeg-turbo (static)
        run: |
          wget https://downloads.sourceforge.net/libjpeg-turbo/libjpeg-turbo-3.0.1.tar.gz && \
          tar -xzf libjpeg-turbo-3.0.1.tar.gz && cd libjpeg-turbo-3.0.1 && \
           cmake -B build -G"Unix Makefiles" \
          -DCMAKE_INSTALL_PREFIX=/usr/local \
           -DENABLE_SHARED=OFF \
           -DENABLE_STATIC=ON && \
          sudo cmake --build build -j$(nproc) && \
          sudo cmake --install build

      - name: libXext
        run: |
          wget https://xorg.freedesktop.org/archive/individual/lib/libXext-1.3.5.tar.gz && \
          tar -xzf libXext-1.3.5.tar.gz && \
          cd libXext-1.3.5 && \
          PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/local/share/pkgconfig \
           ./configure --prefix=/usr/local --disable-shared --enable-static && \
          sudo make -j$(nproc) && sudo make install

      - name: FreeType (static)
        run: |
          wget https://download-mirror.savannah.gnu.org/releases/freetype/freetype-2.13.3.tar.gz && \
          tar -xf freetype-2.13.3.tar.gz && cd freetype-2.13.3 && \
          ./configure \
          --prefix=/usr/local \
           --with-harfbuzz=yes \
          --enable-static \
           --disable-shared \
          --with-pic \
          --with-bdfformat \
          --without-bzip2 \
          HARFBUZZ_CFLAGS="$(pkg-config --cflags harfbuzz)" \
          HARFBUZZ_LIBS="$(pkg-config --libs harfbuzz)"

      - name:  harfbuzz (static, .pc生成確認)
        run: |
          wget https://github.com/harfbuzz/harfbuzz/releases/download/8.3.0/harfbuzz-8.3.0.tar.xz && \
          tar -xf harfbuzz-8.3.0.tar.xz && cd harfbuzz-8.3.0 && \
          meson setup build \
          --prefix=/usr/local \
          --buildtype=release \
          --libdir=lib \
          -Ddefault_library=static \
           -Dtests=disabled \
          -Ddocs=disabled \
          -Dbenchmark=disabled \
           -Dintrospection=disabled && \
          sudo ninja -C build && \
          sudo ninja -C build install

      - name:  ICU (static)
        run: |
          wget https://github.com/unicode-org/icu/releases/download/release-74-2/icu4c-74_2-src.tgz && \
           tar -xzf icu4c-74_2-src.tgz && \
           cd icu/source && \
           ./configure --prefix=/usr/local --disable-shared --enable-static && \
          sudo make -j$(nproc) && \
          sudo make install
         
      - name: Download Qt 6.8 source
        run: |
          curl -LO https://download.qt.io/official_releases/qt/6.9/6.9.1/submodules/qtbase-everywhere-src-6.9.1.tar.xz
          tar xf qtbase-everywhere-src-6.9.1.tar.xz

      - name: Configure and build Qt statically (make version)
        run: |
          mkdir qt-build
          cd  qt-build
          cmake -GNinja ../qtbase-everywhere-src-6.9.1 \
          -DCMAKE_INSTALL_PREFIX=/opt/qt6-static \
          -DCMAKE_BUILD_TYPE=Release \
          -DBUILD_SHARED_LIBS=OFF \
          -DQT_BUILD_EXAMPLES=OFF \
          -DQT_BUILD_TESTS=OFF \
          -DQT_FEATURE_static=ON \
          -DQT_FEATURE_gui=ON \
          -DQT_FEATURE_widgets=ON \
          -DQT_FEATURE_dbus=ON \
          -DQT_FEATURE_icu=ON \
          -DQT_FEATURE_opengl_desktop=OFF \
          -DQT_FEATURE_openssl=ON \
          -DQT_FEATURE_openssl_linked=ON \
          -DQT_FEATURE_png=ON \
          -DQT_FEATURE_jpeg=ON \
          -DQT_FEATURE_freetype=ON \
          -DQT_FEATURE_harfbuzz=ON \
          -DQT_FEATURE_wayland=ON \
          -DQT_FEATURE_xkbcommon=ON \
          -DQT_FEATURE_fontconfig=ON \
          -DQT_FEATURE_sessionmanager=ON \
          -DQT_FEATURE_glib=OFF \
          -DQT_FEATURE_system_zlib=ON \
          -DQT_FEATURE_system_png=ON \
          -DQT_FEATURE_system_jpeg=ON \
          -DQT_FEATURE_system_freetype=ON \
          -DQT_FEATURE_system_harfbuzz=ON || true && \
          echo "----- config.summary -----" && cat config.summary || true && \
           echo "----- CMakeError.log -----" && cat CMakeFiles/CMakeError.log || true && \
           echo "----- CMakeOutput.log -----" && cat CMakeFiles/CMakeOutput.log || true && \
          cmake --build . --parallel && \
          cmake --install .

      - name: Package Qt
        run: |
          cd qt-build
          tar -czf qt6.9.1-linux-static.tar.gz qt6-static-install

      - name: Upload to GitHub Releases
        uses: softprops/action-gh-release@v1
        with:
          tag_name: qt6.9.1-static-linux
          name: Qt 6.9.1 Static Linux
          files: qt-build/qt6.9.1-linux-static.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

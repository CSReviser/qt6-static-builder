# Dockerfile.ubuntu-static

FROM ubuntu:22.04

# build-args
ARG QT_VERSION=6.9.0
ARG QT_MODULE=qtbase
ARG INSTALL_PREFIX=/opt/qt6-static

# 環境変数
ARG DEBIAN_FRONTEND=noninteractive
ENV QT_VERSION=${QT_VERSION}
ENV QT_MODULE=${QT_MODULE}
ENV INSTALL_PREFIX=${INSTALL_PREFIX}
ENV DEBIAN_FRONTEND=noninteractive
ENV CMAKE_PREFIX_PATH="/usr/local"
ENV CPPFLAGS="-I/usr/local/include"
ENV LDFLAGS="-L/usr/local/lib"
ENV CMAKE_EXE_LINKER_FLAGS="-static"
ENV PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/local/share/pkgconfig:/usr/local/lib/x86_64-linux-gnu/pkgconfig
ENV PKG_CONFIG_LIBDIR=/usr/local/lib/pkgconfig
ENV CFLAGS="-fPIC"
ENV CXXFLAGS="-fPIC"

# 必要なパッケージインストール
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    xutils-dev \
    x11proto-dev \
    autoconf \
    automake \
    libtool \
    cmake \
    ninja-build \
    git \
    curl \
    wget \
    meson \
    bison \
    byacc \
    gperf \
    ca-certificates \
    libfontconfig1-dev \
    libfreetype-dev \
    libgtk-3-dev \
    libx11-dev \
    libx11-xcb-dev \
    libxcb-cursor-dev \
    libxcb-glx0-dev \
    libxcb-icccm4-dev \
    libxcb-image0-dev \
    libxcb-keysyms1-dev \
    libxcb-randr0-dev \
    libxcb-render-util0-dev \
    libxcb-shape0-dev \
    libxcb-shm0-dev \
    libxcb-sync-dev \
    libxcb-util-dev \
    libxcb-xfixes0-dev \
    libxcb-xkb-dev \
    libxcb1-dev \
    libxext-dev \
    libxfixes-dev \
    libxi-dev \
    libxkbcommon-dev \
    libxkbcommon-x11-dev \
    libxrender-dev \
    libxcb-xinerama0-dev \
    libfreetype6-dev \
    libjpeg-dev \
    libpng-dev \
    zlib1g-dev \
    libdbus-1-dev \
    libgl1-mesa-dev \
    libglu1-mesa-dev \
    libglib2.0-dev \
    libssl-dev \
    libwayland-dev \
    libwayland-egl-backend-dev \
    meson \
    python3-pip \
    pkg-config \
    libxcb-dri2-0-dev \
    && rm -rf /var/lib/apt/lists/*



# xorgproto (プロトコル定義)
RUN wget https://xorg.freedesktop.org/archive/individual/proto/xorgproto-2024.1.tar.gz && \
    tar -xf xorgproto-2024.1.tar.gz && \
    cd xorgproto-2024.1 && \
    ./configure --prefix=/usr/local && make -j$(nproc) && make install

# xcb-proto (プロトコル定義)
RUN wget https://xorg.freedesktop.org/archive/individual/proto/xcb-proto-1.15.1.tar.xz && \
    tar -xf xcb-proto-1.15.1.tar.xz && \
    cd xcb-proto-1.15.1 && \
    ./configure --prefix=/usr/local && make -j$(nproc) && make install

RUN echo "prefix=/usr/local\nincludedir=\${prefix}/include\n\nName: xproto\nDescription: X11 protocol headers\nVersion: 2024.1\nCflags: -I\${includedir}" > /usr/local/lib/pkgconfig/xproto.pc

# libXau
RUN wget https://xorg.freedesktop.org/archive/individual/lib/libXau-1.0.9.tar.gz && \
    tar -xf libXau-1.0.9.tar.gz && \
    cd libXau-1.0.9 && \
    XAU_CFLAGS="-I/usr/local/include" XAU_LIBS="-L/usr/local/lib -lXau" \
    ./configure --prefix=/usr/local --disable-shared --enable-static --with-pic && \
    make -j$(nproc) && make install

# libXdmcp
RUN wget https://xorg.freedesktop.org/archive/individual/lib/libXdmcp-1.1.3.tar.gz && \
    tar -xf libXdmcp-1.1.3.tar.gz && \
    cd libXdmcp-1.1.3 && \
    ./configure --prefix=/usr/local --disable-shared --enable-static --with-pic && \
    make -j$(nproc) && make install
    
# libpthread-stubs
RUN wget https://xorg.freedesktop.org/archive/individual/lib/libpthread-stubs-0.5.tar.gz && \
    tar -xzf libpthread-stubs-0.5.tar.gz && \
    cd libpthread-stubs-0.5 && \
    ./configure --prefix=/usr/local && \
    make -j$(nproc) && make install

# xtrans
RUN wget https://xorg.freedesktop.org/archive/individual/lib/xtrans-1.4.0.tar.gz && \
    tar -xzf xtrans-1.4.0.tar.gz && \
    cd xtrans-1.4.0 && \
    ./configure --prefix=/usr/local  --disable-shared --enable-static --with-pic && make -j$(nproc) && make install

# libICE
RUN wget https://xorg.freedesktop.org/archive/individual/lib/libICE-1.0.10.tar.gz && \
    tar -xzf libICE-1.0.10.tar.gz && \
    cd libICE-1.0.10 && \
    ICE_CFLAGS="-I/usr/local/include" \
    ICE_LIBS="-L/usr/local/lib -lICE" \
    ./configure --prefix=/usr/local --disable-shared --enable-static --with-pic && \
    make -j$(nproc) && make install

# libSM
RUN wget https://xorg.freedesktop.org/archive/individual/lib/libSM-1.2.3.tar.gz && \
    tar -xzf libSM-1.2.3.tar.gz && \
    cd libSM-1.2.3 && \
    SM_CFLAGS="-I/usr/local/include" \
    SM_LIBS="-L/usr/local/lib -lSM" \
    ICE_CFLAGS="-I/usr/local/include" \
    ICE_LIBS="-L/usr/local/lib -lICE" \
    ./configure --prefix=/usr/local --disable-shared --enable-static --with-pic && \
    make -j$(nproc) && make install

# xextproto
RUN wget https://xorg.freedesktop.org/archive/individual/proto/xextproto-7.3.0.tar.gz && \
    tar -xzf xextproto-7.3.0.tar.gz && \
    cd xextproto-7.3.0 && \
    ./configure --prefix=/usr/local  --disable-shared --enable-static --with-pic && make -j$(nproc) && make install

# kbproto
RUN wget https://xorg.freedesktop.org/archive/individual/proto/kbproto-1.0.7.tar.gz && \
    tar -xzf kbproto-1.0.7.tar.gz && \
    cd kbproto-1.0.7 && \
    ./configure --prefix=/usr/local  --disable-shared --enable-static --with-pic && make -j$(nproc) && make install

# libxcb ビルド
RUN wget https://xorg.freedesktop.org/archive/individual/lib/libxcb-1.15.tar.gz && \
    tar -xzf libxcb-1.15.tar.gz && \
    cd libxcb-1.15 && \
    ./configure --prefix=/usr/local --disable-shared --enable-static --with-pic && \
    make -j$(nproc) && make install && \
    # 静的リンク用に xcb.pc に依存ライブラリを追記
    sed -i '/^Libs:/ s/$/ -lXau -lXdmcp/' /usr/local/lib/pkgconfig/xcb.pc && \
    cat /usr/local/lib/pkgconfig/xcb.pc

# libX11
RUN wget https://xorg.freedesktop.org/archive/individual/lib/libX11-1.8.12.tar.gz && \
    tar -xf libX11-1.8.12.tar.gz && \
    cd libX11-1.8.12 && \
    PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/local/share/pkgconfig \
    ./configure --prefix=/usr/local --disable-shared --enable-static --with-pic && \
    make -j$(nproc) && make install

# zlib (静的ビルド強制)
RUN wget https://zlib.net/zlib-1.3.1.tar.gz && \
    tar -xzf zlib-1.3.1.tar.gz && \
    cd zlib-1.3.1 && \
    ./configure --static --prefix=/usr/local && make -j$(nproc) && make install

# libpng
RUN wget https://download.sourceforge.net/libpng/libpng-1.6.37.tar.gz && \
    tar -xzf libpng-1.6.37.tar.gz && \
    cd libpng-1.6.37 && \
    ./configure --prefix=/usr/local --disable-shared --enable-static --with-pic && make -j$(nproc) && make install

# libjpeg-turbo (static build)
RUN git clone https://github.com/libjpeg-turbo/libjpeg-turbo.git && \
    cd libjpeg-turbo && \
    mkdir build && cd build && \
    cmake -G"Unix Makefiles" \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX=/usr/local \
        -DENABLE_SHARED=FALSE \
        -DENABLE_STATIC=TRUE \
        -DCMAKE_POSITION_INDEPENDENT_CODE=ON .. && \
    make -j$(nproc) && make install && \
    cd ../.. && rm -rf libjpeg-turbo

# libXext
RUN wget https://xorg.freedesktop.org/archive/individual/lib/libXext-1.3.5.tar.gz && \
    tar -xzf libXext-1.3.5.tar.gz && \
    cd libXext-1.3.5 && \
    PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/local/share/pkgconfig \
    ./configure --prefix=/usr/local --disable-shared --enable-static --with-pic && \
    make -j$(nproc) && make install

# libxml2 (static)
RUN wget https://github.com/GNOME/libxml2/archive/refs/tags/v2.14.2.tar.gz && \
    tar -xf v2.14.2.tar.gz && cd libxml2-2.14.2 && \
    cmake -B build -GNinja \
      -D BUILD_SHARED_LIBS=OFF \
      -D CMAKE_INSTALL_PREFIX=/usr/local \
      -D LIBXML2_WITH_PYTHON=OFF \
      -D LIBXML2_WITH_ZLIB=ON \
      -D LIBXML2_WITH_ICONV=OFF && \
    cmake --build build -j$(nproc) && \
    cmake --install build

RUN nm -g --defined-only /usr/local/lib/libxml2.a | grep xmlParseChunk || \
    (echo "ERROR: xmlParseChunk not found in libxml2.a" && exit 1)

# harfbuzz (static, .pc生成確認)
RUN wget https://github.com/harfbuzz/harfbuzz/releases/download/8.3.0/harfbuzz-8.3.0.tar.xz && \
    tar -xf harfbuzz-8.3.0.tar.xz && cd harfbuzz-8.3.0 && \
    meson setup build \
      --prefix=/usr/local \
      --buildtype=release \
      --libdir=lib \
      -Ddefault_library=static \
      -Dtests=disabled \
      -Ddocs=disabled \
      -Dbenchmark=disabled \
      -Dintrospection=disabled && \
    ninja -C build && \
    ninja -C build install

# FreeType (static)
RUN wget https://download.savannah.gnu.org/releases/freetype/freetype-2.13.2.tar.gz && \
    tar -xf freetype-2.13.2.tar.gz && cd freetype-2.13.2 && \
    ./configure \
      --prefix=/usr/local \
      --with-harfbuzz=yes \
      --enable-static \
      --disable-shared \
      --with-pic \
      --without-bzip2 \
      HARFBUZZ_CFLAGS="$(pkg-config --cflags harfbuzz)" \
      HARFBUZZ_LIBS="$(pkg-config --libs harfbuzz)" && \
    make -j$(nproc) && \
    make install

RUN nm -g --defined-only /usr/local/lib/libfreetype.a | grep FT_Get_BDF_Property || \
    (echo "ERROR: FT_Get_BDF_Property not found in libfreetype.a" && exit 1)

RUN set -ex && \
    echo "=== Check symbols in libfreetype.a ===" && \
    nm /usr/local/lib/libfreetype.a | grep hb_ || echo "No harfbuzz symbols found"

# Brotli をビルド・インストール
RUN git clone https://github.com/google/brotli.git && \
    cd brotli && \
    mkdir out && \
    cd out && \
    cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local .. && \
    make -j$(nproc) && \
    make install && \
    cd ../.. && rm -rf brotli

# libxkbfile (optional)
RUN wget https://xorg.freedesktop.org/archive/individual/lib/libxkbfile-1.1.0.tar.gz && \
    tar -xzf libxkbfile-1.1.0.tar.gz && \
    cd libxkbfile-1.1.0 && \
    ./configure --prefix=/usr/local --disable-shared --enable-static --with-pic && make -j$(nproc) && make install

# libXfixes
RUN wget https://xorg.freedesktop.org/archive/individual/lib/libXfixes-6.0.1.tar.gz && \
    tar -xzf libXfixes-6.0.1.tar.gz && \
    cd libXfixes-6.0.1 && \
    PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/local/share/pkgconfig \
    ./configure --prefix=/usr/local --disable-shared --enable-static --with-pic && \
    make -j$(nproc) && make install

# libXrender
RUN wget https://xorg.freedesktop.org/archive/individual/lib/libXrender-0.9.12.tar.gz && \
    tar -xzf libXrender-0.9.12.tar.gz && \
    cd libXrender-0.9.12 && \
    PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/local/share/pkgconfig \
    ./configure --prefix=/usr/local --disable-shared --enable-static --with-pic && \
    make -j$(nproc) && make install

# libXcursor
RUN wget https://xorg.freedesktop.org/archive/individual/lib/libXcursor-1.2.1.tar.gz && \
    tar -xzf libXcursor-1.2.1.tar.gz && \
    cd libXcursor-1.2.1 && \
    PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/local/share/pkgconfig \
    ./configure --prefix=/usr/local --disable-shared --enable-static --with-pic && \
    make -j$(nproc) && make install

# libXi
RUN wget https://xorg.freedesktop.org/archive/individual/lib/libXi-1.8.2.tar.gz && \
    tar -xzf libXi-1.8.2.tar.gz && \
    cd libXi-1.8.2 && \
    PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/local/share/pkgconfig \
    ./configure --prefix=/usr/local --disable-shared --enable-static --with-pic && make -j$(nproc) && make install

# libXinerama
RUN wget https://xorg.freedesktop.org/archive/individual/lib/libXinerama-1.1.5.tar.gz && \
    tar -xzf libXinerama-1.1.5.tar.gz && \
    cd libXinerama-1.1.5 && \
    PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/local/share/pkgconfig \
    ./configure --prefix=/usr/local --disable-shared --enable-static --with-pic && \
    make -j$(nproc) && make install

# libXxf86vm
RUN wget https://xorg.freedesktop.org/archive/individual/lib/libXxf86vm-1.1.4.tar.gz && \
    tar -xzf libXxf86vm-1.1.4.tar.gz && \
    cd libXxf86vm-1.1.4 && \
    PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/local/share/pkgconfig \
    ./configure --prefix=/usr/local --disable-shared --enable-static --with-pic && \
    make -j$(nproc) && make install

# libXt
RUN wget https://xorg.freedesktop.org/archive/individual/lib/libXt-1.3.0.tar.gz && \
    tar -xzf libXt-1.3.0.tar.gz && \
    cd libXt-1.3.0 && \
    PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/local/share/pkgconfig \
    ./configure --prefix=/usr/local --disable-shared --enable-static --with-pic && \
    make -j$(nproc) && make install

# libXmu
RUN wget https://xorg.freedesktop.org/archive/individual/lib/libXmu-1.1.4.tar.gz && \
    tar -xzf libXmu-1.1.4.tar.gz && \
    cd libXmu-1.1.4 && \
    PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/local/share/pkgconfig \
    ./configure --prefix=/usr/local --disable-shared --enable-static --with-pic && \
    make -j$(nproc) && make install

# xcb-util family
ARG XCB_UTIL_VERSION=0.4.1
ARG XCB_UTIL_IMAGE_VERSION=0.4.1
ARG XCB_UTIL_KEYSYMS_VERSION=0.4.1
ARG XCB_UTIL_RENDERUTIL_VERSION=0.3.10
ARG XCB_UTIL_WM_VERSION=0.4.2
ARG XCB_UTIL_CURSOR_VERSION=0.1.5

# Download and build xcb-util
RUN wget https://xorg.freedesktop.org/archive/individual/lib/xcb-util-${XCB_UTIL_VERSION}.tar.gz && \
    tar -xzf xcb-util-${XCB_UTIL_VERSION}.tar.gz && \
    cd xcb-util-${XCB_UTIL_VERSION} && \
    ./configure --prefix=/usr/local --with-xcb=/usr --disable-shared --enable-static --with-pic && \
    make -j$(nproc) && make install

# xcb-util-image
RUN wget https://xorg.freedesktop.org/archive/individual/lib/xcb-util-image-${XCB_UTIL_IMAGE_VERSION}.tar.gz && \
    tar -xzf xcb-util-image-${XCB_UTIL_IMAGE_VERSION}.tar.gz && \
    cd xcb-util-image-${XCB_UTIL_IMAGE_VERSION} && \
    ./configure --prefix=/usr/local --with-xcb=/usr --disable-shared --enable-static --with-pic && \
    make -j$(nproc) && make install 

# xcb-util-keysyms
RUN wget https://xorg.freedesktop.org/archive/individual/lib/xcb-util-keysyms-${XCB_UTIL_KEYSYMS_VERSION}.tar.gz && \
    tar -xzf xcb-util-keysyms-${XCB_UTIL_KEYSYMS_VERSION}.tar.gz && \
    cd xcb-util-keysyms-${XCB_UTIL_KEYSYMS_VERSION} && \
    ./configure --prefix=/usr/local --disable-shared --enable-static --with-pic && \
    make -j$(nproc) && make install

# xcb-util-renderutil
RUN wget https://xorg.freedesktop.org/archive/individual/lib/xcb-util-renderutil-${XCB_UTIL_RENDERUTIL_VERSION}.tar.gz && \
    tar -xzf xcb-util-renderutil-${XCB_UTIL_RENDERUTIL_VERSION}.tar.gz && \
    cd xcb-util-renderutil-${XCB_UTIL_RENDERUTIL_VERSION} && \
    ./configure --prefix=/usr/local --disable-shared --enable-static --with-pic && \
    make -j$(nproc) && make install

# xcb-util-wm
RUN wget https://xorg.freedesktop.org/archive/individual/lib/xcb-util-wm-${XCB_UTIL_WM_VERSION}.tar.gz && \
    tar -xzf xcb-util-wm-${XCB_UTIL_WM_VERSION}.tar.gz && \
    cd xcb-util-wm-${XCB_UTIL_WM_VERSION} && \
    ./configure --prefix=/usr/local --disable-shared --enable-static --with-pic && \
    make -j$(nproc) && make install

# xcb-util-cursor
RUN wget https://xorg.freedesktop.org/archive/individual/lib/xcb-util-cursor-${XCB_UTIL_CURSOR_VERSION}.tar.gz && \
    tar -xzf xcb-util-cursor-${XCB_UTIL_CURSOR_VERSION}.tar.gz && \
    cd xcb-util-cursor-${XCB_UTIL_CURSOR_VERSION} && \
    ./configure --prefix=/usr/local --disable-shared --enable-static --with-pic && \
    make -j$(nproc) && make install

# libXrandr
RUN wget https://xorg.freedesktop.org/archive/individual/lib/libXrandr-1.5.4.tar.gz && \
    tar -xzf libXrandr-1.5.4.tar.gz && \
    cd libXrandr-1.5.4 && \
    PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/local/share/pkgconfig \
    ./configure --prefix=/usr/local --disable-shared --enable-static --with-pic && \
    make -j$(nproc) && make install

# Build libxkbcommon
ARG LIBXKBCOMMON_VERSION=1.9.0
RUN wget https://github.com/xkbcommon/libxkbcommon/archive/refs/tags/xkbcommon-${LIBXKBCOMMON_VERSION}.tar.gz && \
    tar -xf xkbcommon-${LIBXKBCOMMON_VERSION}.tar.gz && \
    cd libxkbcommon-xkbcommon-${LIBXKBCOMMON_VERSION} && \
    LDFLAGS="-lXau -lXdmcp" meson setup builddir --prefix=/usr/local --buildtype=release -Ddefault_library=static -Denable-wayland=false -Denable-x11=true && \
    ninja -C builddir && \
    ninja -C builddir install

# fontconfig (static)
RUN wget https://www.freedesktop.org/software/fontconfig/release/fontconfig-2.15.0.tar.gz && \
    tar -xf fontconfig-2.15.0.tar.gz && cd fontconfig-2.15.0 && \
    env \
      PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:/usr/local/lib/x86_64-linux-gnu/pkgconfig" \
      CPPFLAGS="-I/usr/local/include" \
      LDFLAGS="-L/usr/local/lib -lxml2 -lfreetype -lz -static" \
      CFLAGS="-fPIC" \
    ./configure --prefix=/usr/local --enable-static --disable-shared --with-pic \
        --enable-libxml2 && \
    make -j$(nproc) && \
    make install && \
    echo "===> Checking libfontconfig.a symbols (xmlParseChunk / FT_Get_BDF_Property)" && \
    nm /usr/local/lib/libfontconfig.a | grep -E 'xmlParseChunk|FT_Get_BDF_Property' || \
      (echo "ERROR: missing expected symbols!" && exit 1)&& \
    echo "===> Checking libfontconfig.a symbols (libxml2 / freetype / FT_Get_BDF_Property)" && \
    nm /usr/local/lib/libfontconfig.a | grep -E 'xml|FcConfig|freetype' || (echo "ERROR: missing expected symbols!" && exit 1)

# Qt取得 & ビルド
# Download and extract Qt module source
WORKDIR /build
RUN curl -LO https://download.qt.io/official_releases/qt/${QT_VERSION%.*}/${QT_VERSION}/submodules/${QT_MODULE}-everywhere-src-${QT_VERSION}.tar.xz && \
    tar -xf ${QT_MODULE}-everywhere-src-${QT_VERSION}.tar.xz

# Configure, build, and install Qt statically
RUN mkdir qt-build && cd qt-build && \
    cmake -GNinja ../${QT_MODULE}-everywhere-src-${QT_VERSION} \
      -DCMAKE_INSTALL_PREFIX=${INSTALL_PREFIX} \
      -DCMAKE_BUILD_TYPE=Release \
      -DBUILD_SHARED_LIBS=OFF \
      -DQT_BUILD_EXAMPLES=OFF \
      -DQT_BUILD_TESTS=OFF \
      -DFEATURE_dbus=ON \
      -DFEATURE_icu=OFF \
      -DQT_FEATURE_opengl_desktop=OFF \
      -DQT_FEATURE_static=ON \
      -DQT_FEATURE_openssl=ON \
      -DQT_FEATURE_openssl_linked=ON \
      -DFEATURE_png=ON \
      -DFEATURE_jpeg=ON \
      -DFEATURE_freetype=ON \
      -DFEATURE_harfbuzz=ON \
      -DQT_FEATURE_gui=ON \
      -DQT_FEATURE_widgets=ON \
      -DQT_FEATURE_xlib=ON \
      -DQT_FEATURE_xcb=ON \
      -DQT_FEATURE_xkbcommon=ON \
      -DQT_FEATURE_fontconfig=ON \
      -DQT_FEATURE_sessionmanager=ON \
      -DQT_FEATURE_glib=OFF \
      -DQT_FEATURE_xrender=ON \
      -DFEATURE_system_zlib=ON \
      -DFEATURE_system_png=ON \
      -DFEATURE_system_jpeg=ON \
      -DFEATURE_system_freetype=ON \
      -DFEATURE_system_harfbuzz=ON && \
    cmake --build . --parallel && \
    cmake --install .



RUN echo "==== XCB pkg-config ====" && \
    PKG_CONFIG_PATH=/usr/local/lib/pkgconfig pkg-config --static --libs xcb && \
    echo "==== libQt6XcbQpa.a symbols ====" && \
    nm -g /usr/local/qt6-static/lib/libQt6XcbQpa.a | grep Xau || true && \
    echo "==== libxcb.a symbols ====" && \
    nm -g /usr/local/lib/libxcb.a | grep Xau || true

# PATH登録
ENV PATH="/opt/qt6-static/bin:$PATH"

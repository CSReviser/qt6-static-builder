# Dockerfile.ubuntu-static

FROM ubuntu:22.04

# build-args
ARG QT_VERSION=6.9.0
ARG QT_MODULE=qtbase
ARG INSTALL_PREFIX=/opt/qt6-static

# 環境変数
ARG DEBIAN_FRONTEND=noninteractive
ENV QT_VERSION=${QT_VERSION}
ENV QT_MODULE=${QT_MODULE}
ENV INSTALL_PREFIX=${INSTALL_PREFIX}
ENV DEBIAN_FRONTEND=noninteractive
ENV CMAKE_PREFIX_PATH="/usr/local"
ENV CPPFLAGS="-I/usr/local/include"
ENV LDFLAGS="-L/usr/local/lib"
ENV CMAKE_EXE_LINKER_FLAGS="-static"
ENV PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/local/share/pkgconfig:/usr/local/lib/x86_64-linux-gnu/pkgconfig
ENV CFLAGS="-fPIC"
ENV CXXFLAGS="-fPIC"

# 必要なパッケージインストール
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libxi-dev \
    xutils-dev \
    x11proto-dev \
    autoconf \
    automake \
    libtool \
    cmake \
    ninja-build \
    git \
    curl \
    wget \
    meson \
    bison \
    byacc \
    gperf \
    ca-certificates \
    ca-certificates \
    libfontconfig1-dev \
    libfreetype-dev \
    libgtk-3-dev \
    libx11-dev \
    libx11-xcb-dev \
    libxcb-cursor-dev \
    libxcb-glx0-dev \
    libxcb-icccm4-dev \
    libxcb-image0-dev \
    libxcb-keysyms1-dev \
    libxcb-randr0-dev \
    libxcb-render-util0-dev \
    libxcb-shape0-dev \
    libxcb-shm0-dev \
    libxcb-sync-dev \
    libxcb-util-dev \
    libxcb-xfixes0-dev \
    libxcb-xkb-dev \
    libxcb1-dev \
    libxext-dev \
    libxfixes-dev \
    libxi-dev \
    libxkbcommon-dev \
    libxkbcommon-x11-dev \
    libxrender-dev \
    libjpeg-dev \
    libpng-dev \
    zlib1g-dev \
    libdbus-1-dev \
    libgl1-mesa-dev \
    libglu1-mesa-dev \
    libssl-dev \
    libpthread-stubs0-dev \
    libxau-dev \
    libxdmcp-dev \
    x11proto-core-dev \
    xcb-proto \
    libxcb-util0-dev \
    libxcb-xinerama0-dev \
    meson \
    python3-pip \
    pkg-config && \
    pip3 install mako \
    && rm -rf /var/lib/apt/lists/*

# xorgproto 最新版を Meson でビルド
RUN wget https://xorg.freedesktop.org/archive/individual/proto/xorgproto-2024.1.tar.gz && \
    tar -xf xorgproto-2024.1.tar.gz && cd xorgproto-2024.1 && \
    meson setup build --prefix=/usr/local && \
    ninja -C build && ninja -C build install

# xcb-proto
RUN wget https://xorg.freedesktop.org/archive/individual/proto/xcb-proto-1.15.1.tar.xz && \
    tar -xf xcb-proto-1.15.1.tar.xz && \
    cd xcb-proto-1.15.1 && \
    ./configure --prefix=/usr/local && make -j$(nproc) && make install

# libXau
RUN wget https://xorg.freedesktop.org/archive/individual/lib/libXau-1.0.9.tar.gz && \
    tar -xf libXau-1.0.9.tar.gz && \
    cd libXau-1.0.9 && \
    ./configure --prefix=/usr/local --disable-shared --enable-static --with-pic && \
    make -j$(nproc) && make install

# libXdmcp
RUN wget https://xorg.freedesktop.org/archive/individual/lib/libXdmcp-1.1.3.tar.gz && \
    tar -xf libXdmcp-1.1.3.tar.gz && \
    cd libXdmcp-1.1.3 && \
    ./configure --prefix=/usr/local --disable-shared --enable-static --with-pic && \
    make -j$(nproc) && make install

# libpthread-stubs
RUN wget https://xorg.freedesktop.org/archive/individual/lib/libpthread-stubs-0.5.tar.gz && \
    tar -xzf libpthread-stubs-0.5.tar.gz && \
    cd libpthread-stubs-0.5 && \
    ./configure --prefix=/usr/local && \
    make -j$(nproc) && make install

# xorgproto (プロトコル定義)
RUN wget https://xorg.freedesktop.org/archive/individual/proto/xorgproto-2024.1.tar.gz && \
    tar -xf xorgproto-2024.1.tar.gz && \
    cd xorgproto-2024.1 && \
    ./configure --prefix=/usr/local && make -j$(nproc) && make install

# xtrans
RUN wget https://xorg.freedesktop.org/archive/individual/lib/xtrans-1.4.0.tar.gz && \
    tar -xzf xtrans-1.4.0.tar.gz && \
    cd xtrans-1.4.0 && \
    ./configure --prefix=/usr/local  --disable-shared --enable-static --with-pic && make -j$(nproc) && make install

# libICE
RUN wget https://xorg.freedesktop.org/archive/individual/lib/libICE-1.0.10.tar.gz && \
    tar -xzf libICE-1.0.10.tar.gz && \
    cd libICE-1.0.10 && \
    ICE_CFLAGS="-I/usr/local/include" \
    ICE_LIBS="-L/usr/local/lib -lICE" \
    ./configure --prefix=/usr/local --disable-shared --enable-static --with-pic && \
    make -j$(nproc) && make install

# libSM
RUN wget https://xorg.freedesktop.org/archive/individual/lib/libSM-1.2.3.tar.gz && \
    tar -xzf libSM-1.2.3.tar.gz && \
    cd libSM-1.2.3 && \
    SM_CFLAGS="-I/usr/local/include" \
    SM_LIBS="-L/usr/local/lib -lSM" \
    ICE_CFLAGS="-I/usr/local/include" \
    ICE_LIBS="-L/usr/local/lib -lICE" \
    ./configure --prefix=/usr/local --disable-shared --enable-static --with-pic && \
    make -j$(nproc) && make install

# xextproto
RUN wget https://xorg.freedesktop.org/archive/individual/proto/xextproto-7.3.0.tar.gz && \
    tar -xzf xextproto-7.3.0.tar.gz && \
    cd xextproto-7.3.0 && \
    ./configure --prefix=/usr/local  --disable-shared --enable-static --with-pic && make -j$(nproc) && make install

# kbproto
RUN wget https://xorg.freedesktop.org/archive/individual/proto/kbproto-1.0.7.tar.gz && \
    tar -xzf kbproto-1.0.7.tar.gz && \
    cd kbproto-1.0.7 && \
    ./configure --prefix=/usr/local  --disable-shared --enable-static --with-pic && make -j$(nproc) && make install

# libxcb ビルド
RUN wget https://xorg.freedesktop.org/archive/individual/lib/libxcb-1.15.tar.gz && \
    tar -xzf libxcb-1.15.tar.gz && \
    cd libxcb-1.15 && \
    ./configure --prefix=/usr/local --disable-shared --enable-static --with-pic && \
    make -j$(nproc) && make install && \
    # 静的リンク用に xcb.pc に依存ライブラリを追記
    sed -i '/^Libs:/ s/$/ -lXau -lXdmcp/' /usr/local/lib/pkgconfig/xcb.pc && \
    cat /usr/local/lib/pkgconfig/xcb.pc


# Qt取得 & ビルド
# Download and extract Qt module source
WORKDIR /build
RUN curl -LO https://download.qt.io/official_releases/qt/${QT_VERSION%.*}/${QT_VERSION}/submodules/${QT_MODULE}-everywhere-src-${QT_VERSION}.tar.xz && \
    tar -xf ${QT_MODULE}-everywhere-src-${QT_VERSION}.tar.xz 

# ENV PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:/usr/local/share/pkgconfig:/usr/local/lib/x86_64-linux-gnu/pkgconfig"
# ENV PKG_CONFIG_ALLOW_SYSTEM_LIBS=1
# ENV PKG_CONFIG_USE_STATIC_LIBS=1
# ENV PKG_CONFIG="pkg-config --static"

RUN pkg-config --static --libs xcb-icccm && \
    pkg-config --static --libs xcb-util && \
    pkg-config --static --libs xcb

# Configure, build, and install Qt statically
RUN mkdir qt-build && cd qt-build && \
    cmake -GNinja ../${QT_MODULE}-everywhere-src-${QT_VERSION} \
      -DCMAKE_INSTALL_PREFIX=${INSTALL_PREFIX} \
      -DCMAKE_BUILD_TYPE=Release \
      -DCMAKE_PREFIX_PATH="/usr/local;/usr/lib/x86_64-linux-gnu/cmake" \
      -DCMAKE_EXE_LINKER_FLAGS="-Wl,--start-group -lxcb -lxcb-icccm -lxcb-image -lxcb-keysyms -lxcb-render-util -lxcb-xinerama -lxcb-xkb -lxkbcommon -lxkbcommon-x11 -Wl,--end-group" \
      -DBUILD_SHARED_LIBS=OFF \
      -DQT_BUILD_EXAMPLES=OFF \
      -DQT_BUILD_TESTS=OFF \
      -DFEATURE_dbus=ON \
      -DFEATURE_icu=OFF \
      -DQT_FEATURE_opengl_desktop=OFF \
      -DQT_FEATURE_static=ON \
      -DQT_FEATURE_openssl=ON \
      -DQT_FEATURE_openssl_linked=ON \
      -DQT_FEATURE_gui=ON \
      -DQT_FEATURE_widgets=ON \
      -DQT_FEATURE_xlib=ON \
      -DQT_FEATURE_xcb=ON \
      -DQT_FEATURE_xkbcommon=ON \
      -DQT_FEATURE_fontconfig=ON \
      -DQT_FEATURE_sessionmanager=ON \
      -DQT_FEATURE_glib=OFF \
      -DQT_FEATURE_xrender=ON \
      -DFEATURE_png=ON \
      -DFEATURE_jpeg=ON \
      -DFEATURE_freetype=ON \
      -DFEATURE_harfbuzz=ON \
      -DFEATURE_system_zlib=OFF \
      -DFEATURE_system_png=OFF \
      -DFEATURE_system_jpeg=OFF \
      -DFEATURE_system_freetype=OFF \
      -DFEATURE_system_harfbuzz=OFF && \
    cmake --build . --parallel && \
    cmake --install .

# Configure, build, and install Qt statically
#RUN mkdir qt-build && cd qt-build && \
#    cmake -GNinja ../${QT_MODULE}-everywhere-src-${QT_VERSION} \
#      -DCMAKE_INSTALL_PREFIX=${INSTALL_PREFIX} \
#      -DCMAKE_BUILD_TYPE=Release \
#      -DCMAKE_PREFIX_PATH="/usr/local" \
#      -DCMAKE_EXE_LINKER_FLAGS="-Wl,--start-group -lxcb-icccm -lxcb -lXau -lXdmcp -Wl,--end-group" \
#      -DBUILD_SHARED_LIBS=OFF \
#      -DQT_BUILD_EXAMPLES=OFF \
#      -DQT_BUILD_TESTS=OFF \
#      -DFEATURE_dbus=ON \
#      -DFEATURE_icu=OFF \
#      -DQT_FEATURE_opengl_desktop=OFF \
#      -DQT_FEATURE_static=ON \
#      -DQT_FEATURE_openssl=ON \
#      -DQT_FEATURE_openssl_linked=ON \
#      -DQT_FEATURE_gui=ON \
#      -DQT_FEATURE_widgets=ON \
#      -DQT_FEATURE_xlib=ON \
#      -DQT_FEATURE_xcb=ON \
#      -DQT_FEATURE_xkbcommon=ON \
#      -DQT_FEATURE_fontconfig=ON \
#      -DQT_FEATURE_sessionmanager=ON \
#      -DQT_FEATURE_glib=OFF \
#      -DQT_FEATURE_xrender=ON \
#      -DFEATURE_png=ON \
#      -DFEATURE_jpeg=ON \
#      -DFEATURE_freetype=ON \
#      -DFEATURE_harfbuzz=ON \
#      -DFEATURE_system_zlib=OFF \
#      -DFEATURE_system_png=OFF \
#      -DFEATURE_system_jpeg=OFF \
#      -DFEATURE_system_freetype=OFF \
#      -DFEATURE_system_harfbuzz=OFF && \
#    cmake --build . --parallel && \
#    cmake --install .

RUN pkg-config --static --libs xcb-icccm && \
    pkg-config --static --libs xcb-util && \
    pkg-config --static --libs xcb

RUN grep libxcb-image ${QT_MODULE}-everywhere-src-${QT_VERSION}/CMakeCache.txt || echo "No direct reference to libxcb-image" && \
#    grep -i icccm ${QT_MODULE}-everywhere-src-${QT_VERSION}/CMakeCache.txt && \
#    grep -i icccm ${QT_MODULE}-everywhere-src-${QT_VERSION}/CMakeFiles/CMakeOutput.log

RUN echo "==== XCB pkg-config ====" && \
    PKG_CONFIG_PATH=/usr/local/lib/pkgconfig pkg-config --static --libs xcb && \
    echo "==== libQt6XcbQpa.a symbols ====" && \
    nm -g /opt/qt6-static/lib/libQt6XcbQpa.a | grep Xau || true && \
    nm -u /opt/qt6-static/lib/libQt6XcbQpa.a | grep xcb_icccm || true && \
    echo "==== libxcb.a symbols ====" && \
    nm -g /usr/local/lib/libxcb.a | grep Xau || true

RUN find /opt/qt6-static/lib -name "*.a" -exec echo "Checking {}" \; -exec nm {} \; | grep xcb_icccm_size_hints_set_win_gravity || echo "OK: xcb_icccm_size_hints_set_win_gravity not found"
RUN find /opt/qt6-static/lib -name "*.a" -exec echo "Checking {}" \; -exec nm {} \; | grep xcb_icccm_size_hints_set_min_size || echo "OK: xcb_icccm_size_hints_set_min_size not found"
RUN find /opt/qt6-static/lib -name "*.a" -exec echo "Checking {}" \; -exec nm {} \; | grep xcb_icccm_size_hints_set_max_size || echo "OK: xcb_icccm_size_hints_set_max_size not found"
RUN find /opt/qt6-static/lib -name "*.a" -exec echo "Checking {}" \; -exec nm {} \; | grep xcb_icccm_ || echo "OK: xcb_icccm_ not found"

# ライブラリ一覧を出力（何が生成されたか確認）
RUN echo "Installed static libs:" && ls -l /usr/local/qt6-static/lib/*.a || echo "No static libs found"
# 全 .a ファイルを対象にシンボル調査
RUN find /opt/qt6-static/lib -name "*.a" -exec echo "== {} ==" \; -exec nm {} \; | grep xcb_icccm_ || echo "OK: xcb_icccm_ not found"
RUN nm /opt/qt6-static/lib/*.a | grep xcb_icccm_ || echo "OK: xcb_icccm_ not found"

# PATH登録
ENV PATH="/opt/qt6-static/bin:$PATH"

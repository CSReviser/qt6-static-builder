FROM ubuntu:22.04

ARG QT_VERSION=6.9.0
ENV PATH="/opt/llvm-mingw/bin:$PATH"

# 基本依存
RUN apt-get update && apt-get install -y \
    git curl wget unzip tar xz-utils build-essential \
    cmake ninja-build python3 python3-pip \
    clang lld llvm pkg-config mingw-w64 yasm nasm perl

# llvm-mingw (クロスビルドツールチェイン)
WORKDIR /opt
RUN wget https://github.com/mstorsjo/llvm-mingw/releases/download/20250514/llvm-mingw-20250514-msvcrt-ubuntu-22.04-x86_64.tar.xz && \
    DIR_NAME=$(tar -tf llvm-mingw-20250514-msvcrt-ubuntu-22.04-x86_64.tar.xz | head -1 | cut -f1 -d"/") && \
    tar -xf llvm-mingw-20250514-msvcrt-ubuntu-22.04-x86_64.tar.xz && \
    mv "$DIR_NAME" llvm-mingw && \
    rm llvm-mingw-*.tar.xz

RUN /opt/llvm-mingw/bin/aarch64-w64-mingw32-clang --version

# OpenSSL for Windows ARM (static)
WORKDIR /build/openssl
RUN git clone --branch openssl-3.3.0 https://github.com/openssl/openssl.git . && \
    ./Configure mingw no-shared no-dso no-asm no-tests no-apps \
        --cross-compile-prefix=aarch64-w64-mingw32- \
        --prefix=/opt/openssl-arm && \
    make -j$(nproc) && make install_sw

# Qt6 ソース取得と qtbase のみのビルド
WORKDIR /build
RUN curl -LO https://download.qt.io/official_releases/qt/${QT_VERSION%.*}/${QT_VERSION}/single/qt-everywhere-src-${QT_VERSION}.tar.xz && \
    tar -xf qt-everywhere-src-${QT_VERSION}.tar.xz && \
    mv qt-everywhere-src-${QT_VERSION} qt6

WORKDIR /build/qt6/qtbase
RUN mkdir build && cd build && ../configure \
    -prefix /opt/qt6-arm \
    -static \
    -release \
    -opensource -confirm-license \
    -nomake tests -nomake examples \
    -platform linux-clang \
    -device-option CROSS_COMPILE=aarch64-w64-mingw32- \
    -xplatform win32-clang-msvc \
    -openssl-linked \
    OPENSSL_PREFIX=/opt/openssl-arm \
    -network -gui -widgets -no-dbus && \
    cmake --build build --parallel $(nproc) && cmake --install build

# FFmpeg ビルド for Windows ARM (static)
WORKDIR /build/ffmpeg
RUN git clone https://github.com/FFmpeg/FFmpeg.git . && \
    ./configure \
        --target-os=mingw32 \
        --arch=aarch64 \
        --cross-prefix=aarch64-w64-mingw32- \
        --enable-cross-compile \
        --disable-shared --enable-static \
        --disable-debug \
        --disable-doc \
        --disable-programs \
        --enable-gpl \
        --enable-version3 \
        --prefix=/opt/ffmpeg-arm && \
    make -j$(nproc) && make install

# 最終成果物配置
ENV QT6_ARM_PREFIX=/opt/qt6-arm
ENV OPENSSL_ARM_PREFIX=/opt/openssl-arm
ENV FFMPEG_ARM_PREFIX=/opt/ffmpeg-arm